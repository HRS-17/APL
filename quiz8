def longest_common_prefix(words):
    if words==[]:
        return ''
    if len(words)==1:
        return words[0]
    min_len=len(words[0])
    total_words=len(words)
   
    for i in words :
        if len(i)<min_len:
            min_len=len(i)
    
    match=0
    for j in range(1,min_len):
        for k in words:
            if k[j]==words[0][j]:
                
                match+=1
    match=match//total_words
    
    op=words[0][:match]
    return op


def convolve(A, B):
    n = len(A)
    m = len(B)
    C = [0] * (n + m - 1)
    for i in range(n):
        ai = A[i]
        for j in range(m):
            C[i + j] += ai * B[j]
    return C


def pr_help(l):
    return ",".join(map(str, map(float, l)))






def roman_to_int(s: str) -> int:
    ip=list(s)
    ip=ip[::-1]
    sum,count_x,count_v,count_m,count_l,count_c,count_d=0,0,0,0,0,0,0
    for i in ip:
        if i=='X':
            count_x+=1
            if (count_m or count_d or count_c or count_l ):
                sum+=-10
            else:
                sum+=10
        elif i=='L':
            count_l+=1
            if (count_m or count_d or count_c ):
                sum+=-50
            else:
                sum+=50
        elif i=='C':
            count_c+=1
            if (count_m or count_d ):
                sum+=-100
            else:
                sum+=100
        elif i=='D':
            count_d+=1
            if (count_m):
                sum+=-500
            else:
                sum+=500
        elif i=='M':
            sum+=1000
            count_m+=1
        elif i=='V':
            count_v+=1
            if (count_m or count_d or count_c or count_l or count_x ):
                sum+=-5
            else:
                sum+=5
        elif i=='I':# I is obtained
            if (count_m or count_d or count_c or count_l or count_x or count_v):
                sum+=-1
            else:
                sum+=1
    return sum
            
            
            
